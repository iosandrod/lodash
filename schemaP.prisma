// schema.prisma

// 供应商表
model Supplier {
    id              Int               @id @default(autoincrement()) // 供应商ID
    name            String // 供应商名称
    contactPerson   String // 联系人
    phone           String? // 联系电话
    email           String? // 邮箱
    address         String? // 地址
    creditLimit     Float? // 信用额度
    paymentTerms    String? // 付款条件
    status          Boolean // 供应商状态 (激活/禁用)
    purchaseOrders  PurchaseOrder[] // 供应商对应的采购订单
    PurchaseReceipt PurchaseReceipt[]
    PurchaseInvoice PurchaseInvoice[]
    PurchasePayment PurchasePayment[]
}

// 产品表
model Product {
    id                   Int                   @id @default(autoincrement()) // 产品ID
    name                 String // 产品名称
    description          String? // 产品描述
    price                Float // 产品价格
    purchaseOrderDetails PurchaseOrderDetail[] // 采购订单明细
    purchaseReceipts     PurchaseReceipt[] // 入库记录
    PurchaseReturn       PurchaseReturn[]
}

// 采购订单表
model PurchaseOrder {
    id                   Int                   @id @default(autoincrement()) // 采购订单ID
    supplierId           Int // 供应商ID
    orderDate            DateTime // 订单创建日期
    deliveryDate         DateTime? // 预计交货日期
    orderStatus          String // 订单状态 (待审核、已确认、已发货、已完成、已取消)
    totalAmount          Float // 订单总金额
    createdBy            Int // 创建者用户ID
    remarks              String? // 备注信息
    supplier             Supplier              @relation(fields: [supplierId], references: [id]) // 供应商关联
    purchaseOrderDetails PurchaseOrderDetail[] // 订单明细
    purchaseReceipts     PurchaseReceipt[] // 入库记录
    purchaseInvoices     PurchaseInvoice[] // 采购发票
    purchasePayments     PurchasePayment[] // 采购付款记录
    purchaseReturns      PurchaseReturn[] // 采购退货记录
}

// 采购订单明细表
model PurchaseOrderDetail {
    id            Int           @id @default(autoincrement()) // 订单明细ID
    orderId       Int // 订单ID
    productId     Int // 产品ID
    quantity      Int // 采购数量
    unitPrice     Float // 单价
    discount      Float? // 折扣
    totalAmount   Float // 总金额 (单价 * 数量)
    taxRate       Float? // 税率
    amountWithTax Float? // 含税金额
    order         PurchaseOrder @relation(fields: [orderId], references: [id]) // 订单关联
    product       Product       @relation(fields: [productId], references: [id]) // 产品关联
}

// 采购入库表
model PurchaseReceipt {
    id          Int           @id @default(autoincrement()) // 入库单ID
    orderId     Int // 采购订单ID
    supplierId  Int // 供应商ID
    receiptDate DateTime // 入库日期
    warehouseId Int // 入库仓库ID
    productId   Int // 产品ID
    quantity    Int // 入库数量
    unitPrice   Float // 单价
    totalAmount Float // 总金额 (数量 * 单价)
    status      String // 入库状态 (已确认、已完成、待审核)
    remarks     String? // 备注信息
    order       PurchaseOrder @relation(fields: [orderId], references: [id]) // 采购订单关联
    supplier    Supplier      @relation(fields: [supplierId], references: [id]) // 供应商关联
    product     Product       @relation(fields: [productId], references: [id]) // 产品关联
}

// 采购发票表
model PurchaseInvoice {
    id              Int               @id @default(autoincrement()) // 发票ID
    orderId         Int // 采购订单ID
    supplierId      Int // 供应商ID
    invoiceDate     DateTime // 发票日期
    invoiceAmount   Float // 发票总金额
    taxAmount       Float? // 税额
    invoiceNumber   String // 发票编号
    invoiceStatus   String // 发票状态 (待审核、已确认、已支付)
    order           PurchaseOrder     @relation(fields: [orderId], references: [id]) // 采购订单关联
    supplier        Supplier          @relation(fields: [supplierId], references: [id]) // 供应商关联
    PurchasePayment PurchasePayment[]
}

// 采购付款表
model PurchasePayment {
    id              Int             @id @default(autoincrement()) // 付款ID
    invoiceId       Int // 发票ID
    supplierId      Int // 供应商ID
    paymentDate     DateTime // 付款日期
    paymentAmount   Float // 付款金额
    paymentMethod   String // 付款方式 (银行转账、现金等)
    paymentStatus   String // 付款状态 (未付款、已付款、部分付款)
    remarks         String? // 备注信息
    invoice         PurchaseInvoice @relation(fields: [invoiceId], references: [id]) // 发票关联
    supplier        Supplier        @relation(fields: [supplierId], references: [id]) // 供应商关联
    PurchaseOrder   PurchaseOrder?  @relation(fields: [purchaseOrderId], references: [id])
    purchaseOrderId Int?
}

// 采购退货表
model PurchaseReturn {
    id             Int           @id @default(autoincrement()) // 退货单ID
    orderId        Int // 采购订单ID
    productId      Int // 产品ID
    returnDate     DateTime // 退货日期
    returnQuantity Int // 退货数量
    returnAmount   Float // 退货金额
    returnReason   String // 退货原因
    status         String // 退货状态 (待审核、已处理)
    order          PurchaseOrder @relation(fields: [orderId], references: [id]) // 采购订单关联
    product        Product       @relation(fields: [productId], references: [id]) // 产品关联
}
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" // 或其他数据库类型，如 "postgresql", "sqlite"
  url      = env("DATABASE_URL")
}

model Customer {
  id              Int                 @id @default(autoincrement())
  name            String
  contactPerson   String
  phone           String
  email           String
  address         String
  accountBalance  Float               @default(0)
  creditLimit     Float               @default(0)
  status          String              @default("active")
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  salesOrders     SalesOrder[]
  payments        CustomerPayment[]
  feedbacks       CustomerFeedback[]
}

model SalesOrder {
  id                 Int                 @id @default(autoincrement())
  customerId         Int
  orderDate          DateTime            @default(now())
  deliveryDate       DateTime?
  orderStatus        String
  totalAmount        Float
  paymentStatus      String
  remarks            String?
  createdBy          String
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
  customer           Customer            @relation(fields: [customerId], references: [id])
  salesOrderDetails  SalesOrderDetail[]
  invoices           Invoice[]
  payments           CustomerPayment[]
  salesReturns       SalesReturn[]
  feedbacks          CustomerFeedback[]
  discounts          Discount[]
}

model SalesOrderDetail {
  id            Int       @id @default(autoincrement())
  salesOrderId  Int
  productId     Int
  quantity      Int
  unitPrice     Float
  totalAmount   Float
  discount      Float     @default(0)
  tax           Float     @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  salesOrder    SalesOrder @relation(fields: [salesOrderId], references: [id])
  product       Product    @relation(fields: [productId], references: [id])
}

model Product {
  id              Int               @id @default(autoincrement())
  name            String
  sku             String
  categoryId      Int
  description     String?
  price           Float
  stockQuantity   Int
  unit            String
  status          String            @default("active")
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  category        Category          @relation(fields: [categoryId], references: [id])
  salesOrderDetails SalesOrderDetail[]
  inventoryAlerts InventoryAlert[]
}

model Category {
  id          Int         @id @default(autoincrement())
  name        String
  products    Product[]
}

model CustomerPayment {
  id              Int       @id @default(autoincrement())
  customerId      Int
  paymentDate     DateTime  @default(now())
  paymentAmount   Float
  paymentMethod   String
  orderId         Int?
  remarks         String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  customer        Customer  @relation(fields: [customerId], references: [id])
  salesOrder      SalesOrder? @relation(fields: [orderId], references: [id])
}

model SalesReturn {
  id              Int       @id @default(autoincrement())
  salesOrderId    Int
  returnDate      DateTime  @default(now())
  totalAmount     Float
  reason          String
  status          String    @default("pending")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  salesOrder      SalesOrder @relation(fields: [salesOrderId], references: [id])
}

model DeliveryOrder {
  id              Int       @id @default(autoincrement())
  salesOrderId    Int
  deliveryDate    DateTime  @default(now())
  deliveryStatus  String
  deliveryAddress String
  totalWeight     Float
  deliveryMethod  String
  remarks         String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  salesOrder      SalesOrder @relation(fields: [salesOrderId], references: [id])
}

model SalesReport {
  id               Int       @id @default(autoincrement())
  dateRangeStart   DateTime
  dateRangeEnd     DateTime
  totalSales       Float
  totalOrders      Int
  totalReturns     Float
  totalDiscount    Float
  totalTax         Float
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Invoice {
  id              Int       @id @default(autoincrement())
  salesOrderId    Int
  invoiceDate     DateTime  @default(now())
  totalAmount     Float
  taxAmount       Float
  invoiceNumber   String
  paymentStatus   String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  salesOrder      SalesOrder @relation(fields: [salesOrderId], references: [id])
}

model Discount {
  id              Int       @id @default(autoincrement())
  salesOrderId    Int
  discountType    String
  discountValue   Float
  description     String?
  validFrom       DateTime
  validUntil      DateTime
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  salesOrder      SalesOrder @relation(fields: [salesOrderId], references: [id])
}

model SalesRep {
  id                Int       @id @default(autoincrement())
  name              String
  email             String
  phone             String
  assignedOrdersCount Int     @default(0)
  totalSales        Float     @default(0)
  status            String    @default("active")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  salesRegions      SalesRegion[]
}

model CustomerFeedback {
  id              Int       @id @default(autoincrement())
  customerId      Int
  orderId         Int
  feedbackDate    DateTime  @default(now())
  rating          Int
  comments        String?
  status          String    @default("pending")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  customer        Customer  @relation(fields: [customerId], references: [id])
  salesOrder      SalesOrder @relation(fields: [orderId], references: [id])
}

model Promotion {
  id              Int       @id @default(autoincrement())
  name            String
  description     String?
  startDate       DateTime
  endDate         DateTime
  discountType    String
  discountValue   Float
  status          String    @default("active")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model SalesRegion {
  id          Int       @id @default(autoincrement())
  name        String
  managerId   Int
  territory   String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  manager     SalesRep  @relation(fields: [managerId], references: [id])
}

model InventoryAlert {
  id              Int       @id @default(autoincrement())
  productId       Int
  alertLevel      String
  threshold       Int
  alertDate       DateTime  @default(now())
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  product         Product   @relation(fields: [productId], references: [id])
}
